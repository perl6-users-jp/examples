#!/usr/bin/env perl
use strict;
use warnings;
use utf8;
use 5.010000;
use autodie;

use File::Find;
use Getopt::Long;
use File::Spec;
use File::Temp;

my $perl6 = 'perl6-m';
GetOptions(
    'perl6=s' => \$perl6
);

my $fh = File::Temp->new;
print {$fh} '@*INC ==> grep /site\/lib/ ==> map { .subst(/^file\#/, "").print }';
$fh->flush;

my $sitelib = qx!$perl6 @{[$fh->filename]}!;
$sitelib or die "cannot get site lib";

chdir $sitelib or die "chdir failed: $sitelib:$!";

my %after;

find({
    wanted => sub {
        return 1 unless -f $_;
        return 1 unless /\.pm6?\z/;
        precompile(File::Spec->rel2abs($_));
        return 1;
    },
    no_chdir => 1,
}, '.');

sub precompile {
    my $file = shift @_;

    my $comptarget='mbc';
    my $compext='moarvm';
    my $output = "$file.${compext}";
    my $file_mtime = (stat $file)[9];
    my $output_mtime = -e $output ? (stat $output)[9] : 0;
    if ($file_mtime <= $output_mtime) {
        print "up to date $output. skip\n";
        return 1;
    }

    my @cmd = ($perl6, "--target=$comptarget", "--output=${output}", $file);
    print "@cmd\n";
    my $out = `@cmd 2>&1`;
    my $retval = $?;
    if ($out =~ /Please pre-compile (.*)$/m) {
        print "$1 is required\n";
        precompile($1); # recompile deps
        precompile($file); # try it again
    } else {
        print $out;
    }
}

