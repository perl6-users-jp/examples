#!/usr/bin/env perl
use strict;
use warnings;
use utf8;
use 5.010000;
use autodie;

use File::Find;
use Getopt::Long;
use File::Spec;
use File::Temp;

my $perl6 = 'perl6-m';
GetOptions(
    'perl6=s' => \$perl6
);

my $prefix = prefix();
my $sitelib = "$prefix/share/perl6/site/lib/";

&compile_all;

sub debugf {
    my ($fmt, @p) = @_;
    print STDERR sprintf($fmt, @p) . "\n" if $ENV{DEBUG};
}

sub compile_all {

    find({
        wanted => sub {
            return 1 unless -f $_;
            return 1 unless /\.pm6?\z/;
            precompile(File::Spec->rel2abs($_));
            return 1;
        },
        no_chdir => 1,
    }, $sitelib);
}

sub prefix {
    my $V = qx!$perl6 -V!;
    $V =~ /moar::prefix=(.*)/ or die "invalid output: $V";
    $1;
}

sub precompile_module {
    my $pkg = shift;
    state %seen;
    return if $seen{$pkg}++;

    $pkg =~ s!::!/!g;
    for my $suffix (qw(.pm .pm6)) {
        my $path = "$sitelib/$pkg$suffix";
        if (-f $path) {
            debugf("precompile target found: $pkg");
            precompile($path);
            last;
        }
    }
}

sub precompile {
    my $file = shift @_;
    $file = File::Spec->canonpath($file);

    state %seen;
    return if $seen{$file};

    scan_use($file);

    my $comptarget='mbc';
    my $compext='moarvm';
    my $output = "$file.${compext}";
    my $file_mtime = (stat $file)[9];
    my $output_mtime = -e $output ? (stat $output)[9] : 0;
    if ($file_mtime <= $output_mtime) {
        print "up to date $output. skip\n";
        return 1;
    }

    my @cmd = ($perl6, "--target=$comptarget", "--output=${output}", $file);
    print "@cmd\n";
    my $out = `@cmd 2>&1`;
    my $retval = $?;
    if ($out =~ /Please pre-compile (.*)$/m) {
        print "$1 is required\n";
        precompile($1); # recompile deps
        precompile($file); # try it again
    } else {
        $seen{$file}++;
        print $out;
    }
}

sub scan_use {
    my $file = shift;
    open my $fh, '<', $file;
    while (<$fh>) {
        if (/use\s+([^;\n]+)/) {
            next if $1 eq 'v6';
            precompile_module($1);
        }
    }
}

